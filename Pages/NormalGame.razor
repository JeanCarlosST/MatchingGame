@page "/normal_game"
@using System.Timers;

<style>
    .container {
        width: 424px;
    }

    button {
        width: 100px;
        height: 100px;
        font-size: 50px;
    }
</style>

<div class="container">
    <div class="row">
        @for (int i = 0; i < shuffledAnimals.Count; i++)
        {
            int index = i;
            string animal = shuffledAnimals[index];
            <div class="col-3 p-1">
                <button type="button" class="btn btn-outline-dark"
                        @onclick="@(()=> ButtonClick(animal, index))">
                    <h1>@animal</h1>
                </button>
            </div>
        }
    </div>

    <div class="row">
        <h2>Parejas encontradas: @parejasEncontradas</h2>
    </div>

    <div class="row">
        <h2>Tiempo: @tiempo</h2>
    </div>

</div>

@code
{
    Timer timer;
    int tenthsOfSecondsElapsed = 0;
    string tiempo;
    string lastAnimalFound = string.Empty;
    int lastAnimalIndex = -1;

    int parejasEncontradas = 0;
    List<string> shuffledAnimals = new List<string>();
    List<string> animalEmoji = new List<string>()
    {
        "🐵","🐵",
        "🐶","🐶",
        "🐷","🐷",
        "🐴","🐴",
        "🐔","🐔",
        "🦊","🦊",
        "🐸","🐸",
        "🐼","🐼"
    };

    protected override void OnInitialized()
    {
        timer = new Timer(100);
        timer.Elapsed += Timer_Tick;
        SetupGame();
    }

    void SetupGame()
    {
        Random ran = new Random();
        shuffledAnimals = animalEmoji.OrderBy(item => ran.Next()).ToList();
        tenthsOfSecondsElapsed = 0;
        parejasEncontradas = 0;
    }

    void ButtonClick(string animal, int index)
    {
        if (lastAnimalFound == string.Empty)
        {
            lastAnimalFound = animal;
            lastAnimalIndex = index;
            timer.Start();
        }
        else if (lastAnimalFound == animal && lastAnimalIndex != index)
        {
            lastAnimalFound = string.Empty;
            lastAnimalIndex = -1;
            shuffledAnimals = shuffledAnimals
                .Select(a => a.Replace(animal, string.Empty))
                .ToList();

            parejasEncontradas++;
            CheckVictory();
        }
        else
        {
            lastAnimalFound = string.Empty;
            lastAnimalIndex = -1;
        }
    }

    void CheckVictory()
    {
        if (parejasEncontradas == 8)
        {
            timer.Stop();
            tiempo += " - Play Again?";
            SetupGame();
        }
    }

    private void Timer_Tick(object source, ElapsedEventArgs e)
    {
        InvokeAsync(() =>
        {
            tenthsOfSecondsElapsed++;
            tiempo = (tenthsOfSecondsElapsed / 10F).ToString("0.0s");
            StateHasChanged();
        });
    }
}
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject IToastService Toast

<nav class="navbar navbar-expand-sm navbar-light bg-info bg-gradient box-shadow">
    <div class="container-fluid m-0 ">
        <a class="navbar-brand d-flex align-items-center" href="/">
            <img src="Images/tempLogo.jpg" width="40" class="d-inline-block rounded-circle align-text-top" />
            <span class="ml-2"> Fantastic Matchers </span>
        </a>
        <button class="navbar-toggler" @onclick="ToggleNavMenu" type="button"
                data-toggle="collapse" data-target=".navbar-collapse"
                aria-controls="navbarSupportedContent"
                aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="@NavMenuCssClass navbar-collapse" @onclick="ToggleNavMenu">
            <ul class="navbar-nav me-auto">
                <li class="nav-item px-1">
                    <NavLink class="nav-link" href="/solo">
                        <span class="oi oi-home"></span><b>Solo</b>
                    </NavLink>
                </li>
                <li class="nav-item px-1">
                    <NavLink class="nav-link" href="/one_vs_one">
                        <span class="oi oi-people" aria-hidden="true"></span><b>1vs1</b>
                    </NavLink>
                </li>
                <li class="nav-item px-1">
                    <NavLink class="nav-link" href="/torneos">
                        <span class="oi oi-globe" aria-hidden="true"></span><b>Torneos</b>
                    </NavLink>
                </li>
                <li class="nav-item px-1">
                    <NavLink class="nav-link" href="/rankings">
                        <span class="oi oi-signal"></span><b>Rankings</b>
                    </NavLink>
                </li>
                <li class="nav-item px-1">
                    <NavLink class="nav-link" href="/nosotros">
                        <span class="oi oi-info"></span><b>Nosotros</b>
                    </NavLink>
                </li>
            </ul>
            <AuthorizeView>
                <Authorized>
                    <ul class="nav navbar-nav">
                        <li class="nav-item px-1">
                            <NavLink class="nav-link" href="/">
                                <b>@NombreUsuario</b>
                            </NavLink>
                        </li>
                        <li class="nav-item px-1">
                            <NavLink class="nav-link" @onclick="MostrarModalCerrarSesion">
                                <span class="oi oi-account-logout"></span><b>Cerrar sesión</b>
                            </NavLink>
                        </li>
                    </ul>
                    @if (modalCerrarSesion)
                    {
                        <MatchingGame.Client.Shared.Modal Titulo="Cerrase sesión" Descripcion="¿Estás seguro que quieres cerrar sesión?"
                                                          BtnVerdeTexto="Cerrar sesión" BtnRojoTexto="Cancelar" OnClose="CerrarSesion" />
                    }
                </Authorized>
                <NotAuthorized>
                    <ul class="nav navbar-nav">
                        <li class="nav-item px-1">
                            <NavLink class="nav-link" href="/login">
                                <span class="oi oi-person"></span><b>Iniciar sesión</b>
                            </NavLink>
                        </li>
                        <li class="nav-item px-1">
                            <NavLink class="nav-link" href="/register">
                                <span class="oi oi-account-login"></span><b>Registrarse</b>
                            </NavLink>
                        </li>
                    </ul>
                </NotAuthorized>
            </AuthorizeView>

        </div>
    </div>
</nav>

@code {

    bool collapseNavMenu = true;
    bool modalCerrarSesion;
    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    string NombreUsuario;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await ((CustomAuthenticationStateProvider)AuthStateProvider).GetAuthenticationStateAsync();
        var usuario = authState.User;

        if (usuario.Claims.Count() > 0)
            NombreUsuario = usuario.Claims?.First(c => c.Type == ClaimTypes.Name).Value;
    }

    void MostrarModalCerrarSesion()
    {
        modalCerrarSesion = true;
    }

    async Task CerrarSesion(bool salir)
    {
        if (salir)
        {
            await ((CustomAuthenticationStateProvider)AuthStateProvider).MarcarUsuarioNoLogeado();
            NavigationManager.NavigateTo("/");
            Toast.ShowInfo("Sesión cerrada");
        }

        modalCerrarSesion = false;
    }
}
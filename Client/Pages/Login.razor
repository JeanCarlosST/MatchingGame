@page "/login"
@inject IUserService UserService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider
@inject IToastService Toast

<div class="container">

    <div class="row d-flex justify-content-center">

        <div class="col-lg-5 mt-md-4 ">

            <div class="card shadow-lg bg-info bg-gradient border-1 border-dark">

                <div class="card-header border-0 bg-transparent">
                    <div class="d-flex flex-column text-center my-2">
                        <div class="d-flex justify-content-center">
                            <img class="rounded-circle" src="/Images/tempLogo.jpg" width="120" />
                        </div>
                        <span class="fs-4 mt-2">
                            
                            <b>Inicio de sesión</b>
                        </span>
                    </div>
                </div>

                <div class="d-flex justify-content-center m-1">
                    <form>
                        <div class="input-group mb-3">
                            <span class="input-group-text"><i class="oi oi-person"></i></span>
                            <input type="text" class="form-control m-0" placeholder="Usuario o Email" @bind="usuarioLogin.Email">
                        </div>

                        <div class="input-group mb-2">
                            <span class="input-group-text"><i class="oi oi-key"></i></span>
                            <input type="password" class="form-control" placeholder="Contraseña" @bind="usuarioLogin.Clave">
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" @bind="usuarioLogin.Recuerdame">
                            <label class="form-check-label" for="customControlInline" >Recordarme</label>
                        </div>
                        <div class="d-flex flex-column mt-3">
                            <button type="button" class="btn btn-success d-flex justify-content-center" 
                                    @onclick="ValidarLogin">
                                
                                @if(iniciandoSesion)
                                {
                                    <span>Iniciando sesión</span>
                                    <div class="ml-2">
                                        <span class="spinner-border spinner-border-sm"></span>
                                    </div>
                                }
                                else
                                {
                                    <span>Iniciar sesión</span>
                                }
                            </button>
                        </div>
                    </form>
                </div>

                <div class="my-4 text-center">
                    ¿No tienes una cuenta? <a href="/register">Regístrate</a>
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    public LoginModel usuarioLogin { get; set; }
    public bool iniciandoSesion;

    protected override void OnInitialized()
    {
        usuarioLogin = new LoginModel();
    }

    public async Task ValidarLogin()
    {
        iniciandoSesion = true;
        var usuarioDevuelto = await UserService.LoginAsync(usuarioLogin);
        if(!String.IsNullOrEmpty(usuarioLogin.Email))
        {
            await ((CustomAuthenticationStateProvider)AuthStateProvider).MarcarUsuarioLogeado(usuarioDevuelto);
            await Task.Delay(1000);
            iniciandoSesion = false;
            NavigationManager.NavigateTo("/");
            Toast.ShowSuccess("Logeado correctamente");
        }
        else
        {
            Toast.ShowError("Email o contraseña incorrectos");
        }

        iniciandoSesion = false;
    }
}